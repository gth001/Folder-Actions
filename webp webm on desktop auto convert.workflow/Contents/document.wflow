<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>526</string>
	<key>AMApplicationVersion</key>
	<string>2.10</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>2.0.3</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>COMMAND_STRING</key>
					<dict/>
					<key>CheckedForUserDefaultShell</key>
					<dict/>
					<key>inputMethod</key>
					<dict/>
					<key>shell</key>
					<dict/>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run Shell Script.action</string>
				<key>ActionName</key>
				<string>Run Shell Script</string>
				<key>ActionParameters</key>
				<dict>
					<key>COMMAND_STRING</key>
					<string>#!/bin/bash

# Function to log errors
log_error() {
    local LOG_FILE="$HOME/Desktop/converter_error_log.txt"
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" >> "$LOG_FILE"
}

# Function to move file to trash
move_to_trash() {
    mv "$1" "$HOME/.Trash/"
}

for f in "$@"
do
    # Get file extension (lowercase)
    ext="${f##*.}"
    ext=$(echo "$ext" | tr '[:upper:]' '[:lower:]')
    
    # Get directory and filename without extension
    dir=$(dirname "$f")
    filename=$(basename "$f")
    filename_noext="${filename%.*}"
    
    case "$ext" in
        "webm")
            output="$dir/$filename_noext.mp4"
            /usr/bin/osascript -e 'tell application "System Events" to display notification "Starting conversion of '"$filename"' to MP4" with title "Video Converter"'
            
            # Run HandBrakeCLI and capture any errors
            if /opt/homebrew/bin/HandBrakeCLI -i "$f" -o "$output" -e x264 -q 20 -B 160 2> /tmp/handbrake_error.txt; then
                /usr/bin/osascript -e 'tell application "System Events" to display notification "Successfully converted '"$filename"' to MP4" with title "Video Converter"'
                move_to_trash "$f"
            else
                log_error "=== WebM Conversion Error ==="
                log_error "Failed to convert: $filename"
                log_error "Error output:"
                cat /tmp/handbrake_error.txt >> "$HOME/Desktop/converter_error_log.txt"
                log_error "================================\n"
                /usr/bin/osascript -e 'tell application "System Events" to display notification "Failed to convert '"$filename"'. See error_log for details." with title "Video Converter" sound name "Basso"'
            fi
            rm -f /tmp/handbrake_error.txt
            ;;
        "webp")
            output="$dir/$filename_noext.jpg"
            /usr/bin/osascript -e 'tell application "System Events" to display notification "Converting '"$filename"' to JPG" with title "Image Converter"'
            
            if sips -s format jpeg "$f" --out "$output" 2> /tmp/sips_error.txt; then
                /usr/bin/osascript -e 'tell application "System Events" to display notification "Successfully converted '"$filename"' to JPG" with title "Image Converter"'
                move_to_trash "$f"
            else
                log_error "=== WebP Conversion Error ==="
                log_error "Failed to convert: $filename"
                log_error "Error output:"
                cat /tmp/sips_error.txt >> "$HOME/Desktop/converter_error_log.txt"
                log_error "================================\n"
                /usr/bin/osascript -e 'tell application "System Events" to display notification "Failed to convert '"$filename"'. See error_log for details." with title "Image Converter" sound name "Basso"'
            fi
            rm -f /tmp/sips_error.txt
            ;;
    esac
done</string>
					<key>CheckedForUserDefaultShell</key>
					<true/>
					<key>inputMethod</key>
					<integer>1</integer>
					<key>shell</key>
					<string>/bin/bash</string>
					<key>source</key>
					<string></string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.RunShellScript</string>
				<key>CFBundleVersion</key>
				<string>2.0.3</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunShellScriptAction</string>
				<key>InputUUID</key>
				<string>7C655BFA-510F-445D-A5AE-C0A7FB7AFAEE</string>
				<key>Keywords</key>
				<array>
					<string>Shell</string>
					<string>Script</string>
					<string>Command</string>
					<string>Run</string>
					<string>Unix</string>
				</array>
				<key>OutputUUID</key>
				<string>24C8AA4C-F5AC-4993-8614-95D7BB899D82</string>
				<key>ShowWhenRun</key>
				<false/>
				<key>UUID</key>
				<string>DCA90DDB-E614-4716-A3EC-C8E40E4B9622</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<integer>0</integer>
						<key>name</key>
						<string>inputMethod</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
					<key>1</key>
					<dict>
						<key>default value</key>
						<false/>
						<key>name</key>
						<string>CheckedForUserDefaultShell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>1</string>
					</dict>
					<key>2</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>2</string>
					</dict>
					<key>3</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>COMMAND_STRING</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>3</string>
					</dict>
					<key>4</key>
					<dict>
						<key>default value</key>
						<string>/bin/sh</string>
						<key>name</key>
						<string>shell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>4</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<integer>1</integer>
				<key>location</key>
				<string>339.500000:252.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run Shell Script.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>folderActionFolderPath</key>
		<string>~/Desktop</string>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.folderAction</string>
	</dict>
</dict>
</plist>
